var Brickrouge=function(){"use strict";function t(t){return t[w]||(t[w]=++A)}function e(t){for(;t.firstChild;)t.removeChild(t.firstChild)}function n(t){const e={},n=Array.prototype.slice.call(arguments,1);for(let r of n){let t=r.prototype;for(let n of Object.getOwnPropertyNames(t))e[n]={value:t[n]}}delete e.constructor;const o=class extends t{};return Object.defineProperties(o.prototype,e),o}function r(t){return String(t).replace(/-\D/g,(t=>{return t.charAt(1).toUpperCase()}))}function o(t){const e={},n=t.attributes;for(let o of n)o.name.match(/^data-/)&&(e[r(o.name.substring(5))]=o.value);return e}function i(t){if("symbol"!=typeof t)throw new Error("Event name is not a symbol")}function u(t){if("function"!=typeof t||!(S in t))throw new Error(`Expecting an event instance, got: ${t}`);const e=t[S];return i(e),e}function c(t){if("object"!=typeof t||!(S in t.__proto__.constructor))throw new Error("Expected an Event instance");const e=t.__proto__.constructor[S];return i(e),e}function s(t,e){O in t||(t[O]=[]);const n=t[O];return e?(e in n||(n[e]=[]),n[e]):n}function f(t){if(!(t in P))throw new Error(`There is no widget factory for type "${t}"`);return P[t]}function a(t){return"object"==typeof t&&"getAttribute"in t&&!!t.getAttribute(I)}function l(e){const n=t(e);return n in C}function b(t){t.setAttribute(x,t.getAttribute(I)),t.removeAttribute(I)}function v(t){return t.hasAttribute(W)?JSON.parse(t.getAttribute(W)):T.from(t)}function d(t){const e=t.getAttribute(I);let n=null;if(!e)throw b(t),new Error(`The "${I}" attribute is not defined or empty.`);try{n=f(e)(t,v(t))}catch(t){console.error(t)}if(!n)throw b(t),new Error(`The widget factory "${e}" failed to build the widget.`);t.setAttribute(R,"");try{j.notify(new U(n))}catch(t){console.error(t)}return n}function y(e){const n=t(e);return n in C?C[n]:C[n]=d(e)}function p(t){const e=[];if(t=t||document.body,M.indexOf(t)===-1){if(M.push(t),a(t)&&!l(t))try{e.push(y(t))}catch(t){console.error(t)}let n=t.querySelectorAll(L);for(let r of n)try{e.push(y(r))}catch(t){console.error(t)}M.splice(M.indexOf(t),1),j.notify(new k(t,n,e))}}function h(){function t(t){new t((t=>{const e=[];t.forEach((t=>{Array.prototype.forEach.call(t.addedNodes,(t=>{t instanceof Element&&e.indexOf(t)===-1&&e.push(t)}))})),e.length&&e.forEach(p)})).observe(document.body,{childList:!0,subtree:!0})}function e(){let t=document.body.innerHTML;setInterval((()=>{t!=document.body.innerHTML&&(t=document.body.innerHTML,p(document.body))}),1e3)}const n=MutationObserver||WebkitMutationObserver;n?t(n):e()}function E(t,e){P[t]=e}function g(){h(),p(document.body),j.notify(new N)}function m(t){const e=t.cloneNode(!0);return e.removeAttribute(R),Array.prototype.forEach.call(e.querySelectorAll("[brickrouge-built]"),(t=>{t.removeAttribute(R)})),e}const w="uniqueNumber";let A=0;var T={from:o};const O=Symbol("Subject observers"),S=Symbol("Subject event name");var _=class{static createEvent(t){t[S]=Symbol("Event symbol");return t}observe(t,e){const n=u(t);const r=s(this,n);if(r.indexOf(e)!==-1){throw new Error("Observer already attached",t)}r.push(e);return this}unobserve(t){const e=s(this,null);for(let n of Object.getOwnPropertySymbols(e)){let r=e[n];let o=r.indexOf(t);if(o===-1){continue}r.splice(o,1)}return this}notify(t){const e=c(t);const n=s(this,e);for(let r of n){try{r.call(null,t)}catch(t){console.error(t)}}return this}};const N=_.createEvent(function(){}),U=_.createEvent(function(t){this.widget=t}),k=_.createEvent(function(t,e,n){this.fragment=t,this.elements=e,this.widgets=n});var j={notify:_.prototype.notify,observe:_.prototype.observe,unobserve:_.prototype.unobserve};const I="brickrouge-is",R="brickrouge-built",W="brickrouge-options",B="[brickrouge-is]",x="brickrouge-invalid-is",L="[brickrouge-is]:not([brickrouge-built])",P=[],C=[],M=[];var D={IS_ATTRIBUTE:I,BUILT_ATTRIBUTE:R,OPTIONS_ATTRIBUTE:W,SELECTOR:B,UpdateEvent:k,RunningEvent:N,WidgetEvent:U,isWidget:a,isBuilt:l,register:E,registered:f,from:y,run:g},q=Object.defineProperties(j,{EVENT_UPDATE:{value:D.UpdateEvent},EVENT_RUNNING:{value:D.RunningEvent},EVENT_WIDGET:{value:D.WidgetEvent},uidOf:{value:t},empty:{value:e},clone:{value:m},mixin:{value:n},Dataset:{value:T},Subject:{value:_},isWidget:{value:D.isWidget},isBuilt:{value:D.isBuilt},register:{value:D.register},registered:{value:D.registered},from:{value:D.from},run:{value:D.run},observeUpdate:{value:function(t){this.observe(D.UpdateEvent,t)}},observeRunning:{value:function(t){this.observe(D.RunningEvent,t)}},observeWidget:{value:function(t){this.observe(D.WidgetEvent,t)}}});return q}();
//# sourceMappingURL=https://github.com/Brickrouge/Brickrouge.js/tree/master/dist/brickrouge.min.js.map

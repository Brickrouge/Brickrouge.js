!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Brickrouge=e()}(this,function(){"use strict";function t(t){if("symbol"!=typeof t)throw new Error("Event name is not a symbol")}function e(e){if("function"!=typeof e||!(O in e))throw new Error(`Expecting an event instance, got: ${e}`);const n=e[O];return t(n),n}function n(e){if("object"!=typeof e||!(O in e.__proto__.constructor))throw new Error("Expected an Event instance");const n=e.__proto__.constructor[O];return t(n),n}function r(t,e){E in t||(t[E]=[]);const n=t[E];return e?(e in n||(n[e]=[]),n[e]):n}function o(t){return String(t).replace(/-\D/g,t=>t.charAt(1).toUpperCase())}function i(t){const e={},n=t.attributes;for(let t of n)t.name.match(/^data-/)&&(e[o(t.name.substring(5))]=t.value);return e}function u(t){return t[x]||(t[x]=++_)}function c(t){for(;t.firstChild;)t.removeChild(t.firstChild)}function s(t){const e={},n=Array.prototype.slice.call(arguments,1);for(let t of n){let n=t.prototype;for(let t of Object.getOwnPropertyNames(n))e[t]={value:n[t]}}delete e.constructor;const r=class extends t{};return Object.defineProperties(r.prototype,e),r}function f(t){const e=t.cloneNode(!0);return e.removeAttribute(q),Array.prototype.forEach.call(e.querySelectorAll("["+q+"]"),t=>{t.removeAttribute(q)}),e}function l(t){if(!(t in B))throw new Error(`There is no widget factory for type "${t}"`);return B[t]}function a(t){return"object"==typeof t&&"getAttribute"in t&&!!t.getAttribute(L)}function b(t){return u(t)in D}function d(t){t.setAttribute(T,t.getAttribute(L)),t.removeAttribute(L)}function v(t){return t.hasAttribute(H)?JSON.parse(t.getAttribute(H)):S.from(t)}function y(t){const e=t.getAttribute(L);let n=null;if(!e)throw d(t),new Error(`The "${L}" attribute is not defined or empty.`);try{n=l(e)(t,v(t))}catch(t){console.error(t)}if(!n)throw d(t),new Error(`The widget factory "${e}" failed to build the widget.`);t.setAttribute(q,"");try{k.notify(new P(n))}catch(t){console.error(t)}return n}function p(t){const e=u(t);return e in D?D[e]:D[e]=y(t)}function h(t){const e=[];if(t=t||document.body,-1===U.indexOf(t)){if(U.push(t),a(t)&&!b(t))try{e.push(p(t))}catch(t){console.error(t)}let n=t.querySelectorAll(W);for(let t of n)try{e.push(p(t))}catch(t){console.error(t)}U.splice(U.indexOf(t),1),k.notify(new C(t,n,e))}}function m(){const t=MutationObserver||WebkitMutationObserver;t?function(t){new t(t=>{const e=[];t.forEach(t=>{Array.prototype.forEach.call(t.addedNodes,t=>{if(!(t instanceof Element)||-1!==e.indexOf(t))return;e.push(t)})});if(!e.length)return;e.forEach(h)}).observe(document.body,{childList:!0,subtree:!0})}(t):function(){let t=document.body.innerHTML;setInterval(()=>{if(t===document.body.innerHTML)return;t=document.body.innerHTML;h(document.body)},1e3)}()}function g(t,e){B[t]=e}function w(){m(),h(document.body)}function A(){w(),k.notify(new N)}const E=Symbol("Subject observers"),O=Symbol("Subject event name");var j=class{static createEvent(t){return t[O]=Symbol("Event symbol"),t}observe(t,n){const o=e(t),i=r(this,o);if(-1!==i.indexOf(n))throw new Error("Observer already attached",t);return i.push(n),this}unobserve(t){const e=r(this,null);for(let n of Object.getOwnPropertySymbols(e)){let r=e[n],o=r.indexOf(t);-1!==o&&r.splice(o,1)}return this}notify(t){const e=n(t),o=r(this,e);for(let e of o)try{e.call(null,t)}catch(t){console.error(t)}return this}},S={from:i};const x="uniqueNumber";let _=0;var k=Object.defineProperties({},{Dataset:{value:S},Subject:{value:j},uidOf:{value:u},empty:{value:c},mixin:{value:s},clone:{value:f},notify:{value:j.prototype.notify},observe:{value:j.prototype.observe},unobserve:{value:j.prototype.unobserve}});const M=j.createEvent,N=M(function(){}),P=M(function(t){this.widget=t}),C=M(function(t,e,n){this.fragment=t,this.elements=e,this.widgets=n}),L="brickrouge-is",q="brickrouge-built",H="brickrouge-options",T="brickrouge-invalid-is",W="["+L+"]:not(["+q+"])",B=[],D=[],U=[];return Object.defineProperties(k,{isWidget:{value:a},isBuilt:{value:b},register:{value:g},registered:{value:l},from:{value:p},run:{value:A},observeUpdate:{value:function(t){this.observe(C,t)}},observeRunning:{value:function(t){this.observe(N,t)}},observeWidget:{value:function(t){this.observe(P,t)}}})});
//# sourceMappingURL=https://raw.githubusercontent.com/Brickrouge/Brickrouge.js/master/dist/brickrouge.umd.min.js.map

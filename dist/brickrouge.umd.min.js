!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.Brickrouge=e()}(this,function(){"use strict";function t(t){return t[E]||(t[E]=++A)}function e(t){for(;t.firstChild;)t.removeChild(t.firstChild)}function n(t){const e={},n=Array.prototype.slice.call(arguments,1);for(let t of n){let n=t.prototype;for(let t of Object.getOwnPropertyNames(n))e[t]={value:n[t]}}delete e.constructor;const r=class extends t{};return Object.defineProperties(r.prototype,e),r}function r(t){return String(t).replace(/-\D/g,t=>t.charAt(1).toUpperCase())}function o(t){const e={},n=t.attributes;for(let t of n)t.name.match(/^data-/)&&(e[r(t.name.substring(5))]=t.value);return e}function i(t){if("symbol"!=typeof t)throw new Error("Event name is not a symbol")}function u(t){if("function"!=typeof t||!(S in t))throw new Error(`Expecting an event instance, got: ${t}`);const e=t[S];return i(e),e}function c(t){if("object"!=typeof t||!(S in t.__proto__.constructor))throw new Error("Expected an Event instance");const e=t.__proto__.constructor[S];return i(e),e}function s(t,e){T in t||(t[T]=[]);const n=t[T];return e?(e in n||(n[e]=[]),n[e]):n}function f(t){if(!(t in R))throw new Error(`There is no widget factory for type "${t}"`);return R[t]}function l(t){return"object"==typeof t&&"getAttribute"in t&&!!t.getAttribute(L)}function a(e){return t(e)in W}function b(t){t.setAttribute(M,t.getAttribute(L)),t.removeAttribute(L)}function d(t){return t.hasAttribute(U)?JSON.parse(t.getAttribute(U)):O.from(t)}function y(t){const e=t.getAttribute(L);let n=null;if(!e)throw b(t),new Error(`The "${L}" attribute is not defined or empty.`);try{n=f(e)(t,d(t))}catch(t){console.error(t)}if(!n)throw b(t),new Error(`The widget factory "${e}" failed to build the widget.`);t.setAttribute(N,"");try{k.notify(new B(n))}catch(t){console.error(t)}return n}function v(e){const n=t(e);return n in W?W[n]:W[n]=y(e)}function p(t){const e=[];if(t=t||document.body,-1===q.indexOf(t)){if(q.push(t),l(t)&&!a(t))try{e.push(v(t))}catch(t){console.error(t)}let n=t.querySelectorAll(P);for(let t of n)try{e.push(v(t))}catch(t){console.error(t)}q.splice(q.indexOf(t),1),k.notify(new I(t,n,e))}}function h(){const t=MutationObserver||WebkitMutationObserver;t?function(t){new t(t=>{const e=[];t.forEach(t=>{Array.prototype.forEach.call(t.addedNodes,t=>{if(!(t instanceof Element)||-1!==e.indexOf(t))return;e.push(t)})});if(!e.length)return;e.forEach(p)}).observe(document.body,{childList:!0,subtree:!0})}(t):function(){let t=document.body.innerHTML;setInterval(()=>{if(t===document.body.innerHTML)return;t=document.body.innerHTML;p(document.body)},1e3)}()}function m(t,e){R[t]=e}function g(){h(),p(document.body),k.notify(new x)}function w(t){const e=t.cloneNode(!0);return e.removeAttribute(N),Array.prototype.forEach.call(e.querySelectorAll("["+N+"]"),t=>{t.removeAttribute(N)}),e}const E="uniqueNumber";let A=0;var O={from:o};const T=Symbol("Subject observers"),S=Symbol("Subject event name");var _=class{static createEvent(t){return t[S]=Symbol("Event symbol"),t}observe(t,e){const n=u(t),r=s(this,n);if(-1!==r.indexOf(e))throw new Error("Observer already attached",t);return r.push(e),this}unobserve(t){const e=s(this,null);for(let n of Object.getOwnPropertySymbols(e)){let r=e[n],o=r.indexOf(t);-1!==o&&r.splice(o,1)}return this}notify(t){const e=c(t),n=s(this,e);for(let e of n)try{e.call(null,t)}catch(t){console.error(t)}return this}};const j=_.createEvent,x=j(function(){}),B=j(function(t){this.widget=t}),I=j(function(t,e,n){this.fragment=t,this.elements=e,this.widgets=n});var k={notify:_.prototype.notify,observe:_.prototype.observe,unobserve:_.prototype.unobserve};const L="brickrouge-is",N="brickrouge-built",U="brickrouge-options",C="["+L+"]",M="brickrouge-invalid-is",P="["+L+"]:not(["+N+"])",R=[],W=[],q=[];var H={IS_ATTRIBUTE:L,BUILT_ATTRIBUTE:N,OPTIONS_ATTRIBUTE:U,SELECTOR:C,isWidget:l,isBuilt:a,register:m,registered:f,from:v,run:g};return Object.defineProperties(k,{uidOf:{value:t},empty:{value:e},clone:{value:w},mixin:{value:n},Dataset:{value:O},Subject:{value:_},isWidget:{value:H.isWidget},isBuilt:{value:H.isBuilt},register:{value:H.register},registered:{value:H.registered},from:{value:H.from},run:{value:H.run},observeUpdate:{value:function(t){this.observe(I,t)}},observeRunning:{value:function(t){this.observe(x,t)}},observeWidget:{value:function(t){this.observe(B,t)}}})});
//# sourceMappingURL=https://raw.githubusercontent.com/Brickrouge/Brickrouge.js/master/dist/brickrouge.umd.min.js.map
